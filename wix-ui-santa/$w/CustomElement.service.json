{ "name": "CustomElement",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 5,
      "filename": "CustomElement.js" },
  "docs":
    { "summary": "An API for rendering a custom element.",
      "description":
        [ "A custom element is a reusable element that you define in a JavaScript file ",
          " hosted separately.  The custom element is defined using the standard ECMAScript 2015 class syntax. ",
          "",
          " **Note:** This reference provides basic instructions for creating custom elements. For full instructions and examples, see the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\"  target=\"_blank\">MDN documentation</a>. ",
          " This <a href=\"https://support.wix.com/en/article/corvid-creating-your-own-custom-elements\" target=\"_blank\">article</a> explains why and how to use custom elements. The general flow for working with custom elements is: ",
          "",
          "",
          " 1. Code the custom element and its behavior in a JavaScript file using any IDE on your own server. ",
          " 1. In the Wix Editor, add a custom element to the site.",
          " 1. Use Corvid to code event handling and additional functionality for the custom element. ",
          "",
          "You can also use Corvid for SEO support on custom elements. See [`seoMarkup`](https://www.wix.com/corvid/reference/$w.CustomElement.html#seoMarkup).",
          "",
          "   ",
          " Limitations",
          "",
          "",
          " + Custom elements are supported only for premium Wix users on sites with their own domain.",
          " + Layout for custom elements might appear differently when viewing in the Editor, when previewing, and on the live site after publishing. Consider <a href=\"https://support.wix.com/en/article/about-release-candidate-versions\"  target=\"_blank\">`creating a release candidate</a> to check how the custom element site will look on the site after publishing." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "seoMarkup",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "lineno": 91,
              "filename": "CustomElement.js" } ],
        "docs":
          { "summary": "Sets or gets the SEO markup to be rendered for search engine bots.",
            "description":
              [ "Use the `seoMarkup` property to write static HTML content that will be served to Google and other search engines.  This is necessary because bots cannot read the Javascript content of the custom element.",
                " If you do not add the equivalent HTML of the custom element's implementation using this SEO markup property, bots will not be able to see the custom element and will not include it in search engine results." ],
            "links": [],
            "examples":
              [ { "title": "Define and use a custom element",
                  "body":
                    [ "// **********************************************",
                      "// Custom Element Code in Corvid ",
                      "// **********************************************",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  // Sets the value of an attribute in the custom element. ",
                      "  $w('#myCustomElement').setAttribute('isLoggedIn', wixUsers.currentUser.loggedIn);",
                      "",
                      "  // Handle an event on the custom element.  ",
                      "  $w('#myCustomElement').on('my-event', console.log('The event triggered sucessfully.') );",
                      "",
                      "  // Set the HTML content for SEO markup to be used by search engines",
                      "  $w('#myCustomElement').seoMarkup = '<div>logged in status</div>';",
                      "",
                      "});",
                      "",
                      "// **********************************************",
                      "// Custom Element Implementation on an HTML Page",
                      "// **********************************************",
                      "",
                      "class MyElement extends HTMLElement {",
                      "",
                      "  // Define a special callback function that runs when ",
                      "  // the custom element is connected initially to the DOM. ",
                      "  connectedCallback() {",
                      "",
                      "    this.innerHTML = 'Hello world!'",
                      "",
                      "    // Trigger an event that Corvid can watch for and handle ",
                      "    // using the [`on()`](https://www.wix.com/corvid/reference/$w.IFrame.html#global) function.",
                      "    this.dispatchEvent(new CustomEvent('my-event')",
                      "  }",
                      "}",
                      "",
                      "// Register the custom element. The name \"myCustomElement\" is the ",
                      "// tag name to specify when adding the custom element in the Wix ",
                      "// Editor to the site.",
                      "customElements.define('myCustomElement', MyElement);",
                      "  ",
                      "// *****************************************************",
                      "// Custom Element's Javascript Result",
                      "// *****************************************************",
                      "<myCustomElement data = <”Hello world!”> inner html </myCustomElement>",
                      "",
                      "// *****************************************************",
                      "// Custom Element's HTML Result for Search Engine Bots",
                      "// *****************************************************",
                      "<myCustomElement><div>Hello World!</div></myCustomElement>" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "It is the user's responsibility to handle all aspects of SEO for the element, including managing the validity of the SEO markup opposite search engines." ] } } ],
  "operations":
    [ { "name": "on",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventName",
              "type": "string",
              "doc": "The name of the event." },
            { "name": "callBackFunction",
              "type": "Function",
              "doc": "The callback function to run when the event is triggered." } ],
        "ret":
          { "type": "$w.CustomElement",
            "doc": "The custom element." },
        "locations":
          [ { "lineno": 62,
              "filename": "CustomElement.js" } ],
        "docs":
          { "summary": "Registers a callback function in Corvid for an event on the custom element.",
            "description":
              [ "The `on()` function registers a callback function in Corvid based on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\"  target=\"_blank\">`this.dispatchEvent()`</a> in the custom element's implementation. ",
                "",
                " The `on()` function enables the custom element to affect the rendering of the site. ",
                "",
                " The code snippets below demonstrate how to define a `my-event` event in the custom element's implementation and how to refer to it from Corvid.",
                "",
                " ![on-event](images/customElement_on.png \"On Event\")" ],
            "links": [],
            "examples":
              [ { "title": "Define and use a custom element",
                  "body":
                    [ "// **********************************************",
                      "// Custom Element Code in Corvid ",
                      "// **********************************************",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  // Sets the value of an attribute in the custom element. ",
                      "  $w('#myCustomElement').setAttribute('isLoggedIn', wixUsers.currentUser.loggedIn);",
                      "",
                      "  // Handle an event on the custom element.  ",
                      "  $w('#myCustomElement').on('my-event', console.log('The event triggered sucessfully.') );",
                      "",
                      "  // Set the HTML content for SEO markup to be used by search engines",
                      "  $w('#myCustomElement').seoMarkup = '<div>logged in status</div>';",
                      "",
                      "});",
                      "",
                      "// **********************************************",
                      "// Custom Element Implementation on an HTML Page",
                      "// **********************************************",
                      "",
                      "class MyElement extends HTMLElement {",
                      "",
                      "  // Define a special callback function that runs when ",
                      "  // the custom element is connected initially to the DOM. ",
                      "  connectedCallback() {",
                      "",
                      "    this.innerHTML = 'Hello world!'",
                      "",
                      "    // Trigger an event that Corvid can watch for and handle ",
                      "    // using the [`on()`](https://www.wix.com/corvid/reference/$w.IFrame.html#global) function.",
                      "    this.dispatchEvent(new CustomEvent('my-event')",
                      "  }",
                      "}",
                      "",
                      "// Register the custom element. The name \"myCustomElement\" is the ",
                      "// tag name to specify when adding the custom element in the Wix ",
                      "// Editor to the site.",
                      "customElements.define('myCustomElement', MyElement);",
                      "  ",
                      "// *****************************************************",
                      "// Custom Element's Javascript Result",
                      "// *****************************************************",
                      "<myCustomElement data = <”Hello world!”> inner html </myCustomElement>",
                      "",
                      "// *****************************************************",
                      "// Custom Element's HTML Result for Search Engine Bots",
                      "// *****************************************************",
                      "<myCustomElement><div>Hello World!</div></myCustomElement>" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setAttribute",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "The name of the attribute." },
            { "name": "value",
              "type": "void",
              "doc": "The value of the attribute." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 40,
              "filename": "CustomElement.js" } ],
        "docs":
          { "summary": "Sets an attribute for the custom element.",
            "description":
              [ "We can use `setAttribute()` to affect the custom element's definition and defined behavior. Consider it a way for Corvid to pass information to the custom element based on the context of the site. ",
                "",
                "Each `setAttribute()` function sets one attribute at a time using a key-value pair. Use multiple functions to set more than one attribute. ",
                "",
                "If the custom element does not yet have the attribute, `setAttribute()` creates it." ],
            "links": [],
            "examples":
              [ { "title": "Define and use a custom element",
                  "body":
                    [ "// **********************************************",
                      "// Custom Element Code in Corvid ",
                      "// **********************************************",
                      "",
                      "$w.onReady(function () {",
                      "",
                      "  // Sets the value of an attribute in the custom element. ",
                      "  $w('#myCustomElement').setAttribute('isLoggedIn', wixUsers.currentUser.loggedIn);",
                      "",
                      "  // Handle an event on the custom element.  ",
                      "  $w('#myCustomElement').on('my-event', console.log('The event triggered sucessfully.') );",
                      "",
                      "  // Set the HTML content for SEO markup to be used by search engines",
                      "  $w('#myCustomElement').seoMarkup = '<div>logged in status</div>';",
                      "",
                      "});",
                      "",
                      "// **********************************************",
                      "// Custom Element Implementation on an HTML Page",
                      "// **********************************************",
                      "",
                      "class MyElement extends HTMLElement {",
                      "",
                      "  // Define a special callback function that runs when ",
                      "  // the custom element is connected initially to the DOM. ",
                      "  connectedCallback() {",
                      "",
                      "    this.innerHTML = 'Hello world!'",
                      "",
                      "    // Trigger an event that Corvid can watch for and handle ",
                      "    // using the [`on()`](https://www.wix.com/corvid/reference/$w.IFrame.html#global) function.",
                      "    this.dispatchEvent(new CustomEvent('my-event')",
                      "  }",
                      "}",
                      "",
                      "// Register the custom element. The name \"myCustomElement\" is the ",
                      "// tag name to specify when adding the custom element in the Wix ",
                      "// Editor to the site.",
                      "customElements.define('myCustomElement', MyElement);",
                      "  ",
                      "// *****************************************************",
                      "// Custom Element's Javascript Result",
                      "// *****************************************************",
                      "<myCustomElement data = <”Hello world!”> inner html </myCustomElement>",
                      "",
                      "// *****************************************************",
                      "// Custom Element's HTML Result for Search Engine Bots",
                      "// *****************************************************",
                      "<myCustomElement><div>Hello World!</div></myCustomElement>" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }