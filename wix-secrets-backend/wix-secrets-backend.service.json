{ "name": "wix-secrets-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "secrets.js" },
  "docs":
    { "summary": "The wix-secrets-backend module contains functionality for\nretrieving secrets you safely store in your site's <a href=\"https://support.wix.com/en/article/corvid-about-the-secrets-manager\" target=\"_blank\">Secrets Manager</a>.",
      "description":
        [ "The Secrets Manager allows you to store and encrypt API keys and other secrets on your site.",
          "The Secrets API allows you to safely work with the secrets in your code.",
          "",
          " The following describes the general procedure for working with API keys and the Secrets Manager:",
          "",
          " 1. The site owner gets an API key from a 3rd-party service.",
          " 1. The site owner stores the API key as a new secret in the Secrets Manager. The site owner assigns a name to the secret.",
          " 1. The site owner or contributor uses the Secrets API together with the secret's assigned name to represent the API key in backend code. When the code runs, the value of the API key is extracted from the Secrets Manager.",
          "",
          "",
          " To use the Secrets API, import `wixSecrets` from the `wix-secrets-backend` module:",
          "",
          "   ```javascript",
          "   import wixSecrets from 'wix-secrets-backend';",
          "   ```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getSecret",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "name",
              "type": "string",
              "doc": "The name of the secret to get the value of." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - The value of the secret with the given name." },
        "locations":
          [ { "lineno": 25,
              "filename": "secrets.js" } ],
        "docs":
          { "summary": "Gets a secret by name.",
            "description":
              [ "The `getSecret()` function returns a Promise that resolves to the value of the secret",
                " in the Secrets Manager with the given name." ],
            "links": [],
            "examples":
              [ { "title": "Get a secret and use it to fetch a JSON from a 3rd-party service",
                  "body":
                    [ "import {getSecret} from 'wix-secrets-backend';",
                      "import {getJSON} from 'wix-fetch';",
                      "",
                      "export function getSomeJSON() {",
                      "  return getSecret('myApiKeyName')",
                      "    .then((secret) => {",
                      "      return getJSON(`https://someapi.com/api/someendpoint?apiKey=${secret}`)",
                      "    });",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Get an API key and use it to fetch a JSON from a weather service",
                  "body":
                    [ "/************************************",
                      " * backend code - secretHandler.jsw *",
                      " ************************************/",
                      "",
                      " import {getSecret} from 'wix-secrets-backend';",
                      " import {getJSON} from 'wix-fetch';",
                      "",
                      " export function getWeatherJson() {",
                      "   return getSecret('openWeatherApiKey')",
                      "     .then((secret) => {",
                      "       return getJSON(`https://api.openweathermap.org/data/2.5/weather?q=London&units=metric&APPID=${secret}`)",
                      "     });",
                      " }",
                      "",
                      "/********************",
                      " * client-side code *",
                      " ********************/",
                      "",
                      " import {getWeatherJson} from 'backend/secretHandler';",
                      "",
                      " export function getWeather_click(event) {",
                      "   getWeatherJson()",
                      "     .then((json) => {",
                      "       let currentWeather = json.weather[0].description; // \"mist\"",
                      "       let currentTemp = json.main.temp; // 9.4 (degrees Celsius)",
                      "     })",
                      "     .catch((error) => {",
                      "       console.log(error);",
                      "     });",
                      " }",
                      "" ],
                  "extra":
                    { "description": "In this example, we use the Secrets API to get an API key from the Secrets Manager. We use the key in the backend to get a JSON with weather information from a 3rd-party service, and return it to the client side." } } ],
            "extra":
              {  } },
        "extra":
          { "notes":
              [ "To prevent malicious users from accessing the value of your secret,\ndon't return the value of the secret to client side. Use the secret's value in the backend." ] } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }